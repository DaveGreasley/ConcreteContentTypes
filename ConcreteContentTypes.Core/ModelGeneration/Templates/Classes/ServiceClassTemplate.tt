<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="ConcreteContentTypes.Core.Models" #>
<#@ import namespace="ConcreteContentTypes.Core.PropertyCSharpWriters" #>
<#@ output extension=".cs" #>

using ConcreteContentTypes.Core.Interfaces;
using System;
using Umbraco.Core;
using Umbraco.Core.Models;
using Umbraco.Core.Services;
using <#= _classDefinition.Namespace #>;

namespace <#= _nameSpace #>
{
	public class <#= _classDefinition.Name #>Service : ServiceBase<<#= _classDefinition.Name #>>
	{
		public override string ContentTypeAlias
		{
			get { return "<#= _classDefinition.Name #>"; }
		}

		public <#= _classDefinition.Name #>Service()
			: base()
		{
			
		}

		public <#= _classDefinition.Name #>Service(IContentService contentService)
			: base(contentService)
		{
			
		}

		public override IContent SetDbProperties(<#= _classDefinition.Name #> content, IContent dbContent)
		{
			<# foreach(PropertyCSharpWriterBase p in _propertyWriters) {
				if (!string.IsNullOrEmpty(p.GetPersistString())) { #>
			
			<#=p.GetPersistString()#>
			<# } } #>

			return base.SetDbProperties(content, dbContent);
		}
	}
}
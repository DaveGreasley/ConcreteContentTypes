<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

		private <#=_typeName#> _<#=_propertyAlias#> = null;
		public <#=_typeName#> <#=_nicePropertyAlias#>
		{
			get 
			{
				if (_<#=_propertyAlias#> == null)
				{
				<#if (_isCollection) {#>
					
					_<#=_propertyAlias#> = new <#=_typeName#>();

					var content = this.Content.GetPropertyValue<List<IPublishedContent>>("<#=_propertyAlias#>", this.GetPropertiesRecursively);

					if (content != null)
						_<#=_propertyAlias#> = content.As<<#=_individualTypeName#>>().ToList();

				<#} else { #>
				
					var content = this.Content.GetPropertyValue<IPublishedContent>("<#=_propertyAlias#>", this.GetPropertiesRecursively);

					if (content == null)
						return new <#=_typeName#>();

					_<#=_propertyAlias#> = new <#=_typeName#>(content);
				<# } #>
}

				return _<#=_propertyAlias#>;
			}
		}
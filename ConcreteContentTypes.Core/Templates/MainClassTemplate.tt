<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="ConcreteContentTypes.Core.Models" #>
<#@ import namespace="ConcreteContentTypes.Core.PropertyTypeCSharpWriters" #>
<#@ output extension=".cs" #>

using System;
using System.Collections.Generic;
using Umbraco.Core.Models;
using Umbraco.Web;
using System.Web;
using System.Linq;
using System.ComponentModel.DataAnnotations;
using ConcreteContentTypes.Core.Models;
using Newtonsoft.Json;


namespace <#= _classDefinition.Namespace #>
{
	public partial class <#= _classDefinition.Name #> : <#= _classDefinition.BaseClass #>
	{
		<# foreach(TypeResolverBase p in _classDefinition.Properties) { #>
		
		<#=p.GetPropertyDefinition()#> <# } #>

		<# if (_classDefinition.HasConcreteChildType) { #>
private IEnumerable<<#=_classDefinition.ChildType#>> _children = null;
		public new IEnumerable<<#=_classDefinition.ChildType#>> Children
		{
			get
			{
				if (_children == null)
				{
					_children = this.Content.Children.Select(x => new <#=_classDefinition.ChildType#>(x));
				}

				return _children;
			}
		}
		<#}#>

		public <#= _classDefinition.Name #>()
			: base()
		{
		}

		public <#= _classDefinition.Name #>(int contentId)
			: base(contentId)
		{
		}

		public <#=_classDefinition.Name#>(IPublishedContent content)
			: base(content)
		{
		}

		protected override void Init()
		{
			base.Init();
			<# foreach(TypeResolverBase p in _classDefinition.Properties) {
				if (!string.IsNullOrEmpty(p.GetValueString())) { #>
			
			<#=p.GetValueString()#>
			<# } } #>

		}

		public override IContent SetProperties(IContent dbContent)
		{
			<# foreach(TypeResolverBase p in _classDefinition.Properties) {
				if (!string.IsNullOrEmpty(p.GetPersistString())) { #>
			
			<#=p.GetPersistString()#>
			<# } } #>

			return base.SetProperties(dbContent);
		}
	}
}

